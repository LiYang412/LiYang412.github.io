<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>How to write yourself CMakeLists.txt</title>
      <link href="2021/11/29/how_to_write_yourself_CmakeLists/"/>
      <url>2021/11/29/how_to_write_yourself_CmakeLists/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>🍊 <strong>前言</strong></p><blockquote><ul><li>公司的开发环境一般在<code>Ubuntu</code>、<code>Windows</code>或者<code>WSL</code>等等。我在公司使用的语言基本上就是<code>c++</code>，身边的大神一般用<code>vim</code>不用<code>IDE</code>，自知是菜鸡一枚，用<code>CLion</code>和<code>CMakeLists.txt</code>这对组合，虽然<code>CLion</code>在创建<code>project</code>时候会自动生成一个<code>CMakeLists.txt</code>，但是对开发者而言感觉还是不够用，并且不够简练。根据我自己的一点点经验<code>CMakeLists.txt</code>尽量写一个模板，以后直接复用就好，如果需要更复杂的需求可以查找<a href="https://cmake.org/documentation/"><code>CMake</code>官方文档</a>。平时自己用的<code>CMakeLists.txt</code>的例子如下:</li></ul></blockquote><p>🔋 <strong>一般<code>Project</code>目录结构</strong></p><blockquote><ul><li><code>include</code> 存放头文件</li><li><code>source</code> 存放源文件</li><li><code>3rd-party</code> 三方库</li><li><code>CMakeLists.txt</code></li><li><code>build.sh</code> 编译完成之后会产生中间文件,<code>build.sh</code>作用就是删除多余的中间文件,但是实际如果查找编译的<code>BUG</code>中间文件还是很有用的。</li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">├── 3rd-party</span><br><span class="line">│   └── proj4</span><br><span class="line">│       ├── include</span><br><span class="line">│       │   └── proj4</span><br><span class="line">│       │       ├── geodesic.h</span><br><span class="line">│       │       ├── proj_api.h</span><br><span class="line">│       │       ├── projects.h</span><br><span class="line">│       │       └── proj.h</span><br><span class="line">│       └── lib</span><br><span class="line">│           └── libproj4.a</span><br><span class="line">├── build.sh</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── include</span><br><span class="line">└── source</span><br><span class="line">    └── main.cpp</span><br></pre></td></tr></table></figure><p>📈 <strong><code>CMakeLists.txt</code>内容以及说明</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义cmake需要的版本号</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义工程的名字后面与$&#123;CMAKE_PROJECT_NAME&#125;相呼应</span></span><br><span class="line"><span class="keyword">project</span> (example-cmakelists)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置一些编译的设置根据自己的需求而定</span></span><br><span class="line"><span class="keyword">set</span> (CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span> (CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">set</span> (CMAKE_BUILD_TYPE debug)</span><br><span class="line"><span class="keyword">add_compile_options</span> (-g)</span><br><span class="line"></span><br><span class="line"><span class="comment">#加速编译 </span></span><br><span class="line"><span class="keyword">find_program</span>(CCACHE_FOUND ccache)</span><br><span class="line"><span class="keyword">if</span>(CCACHE_FOUND)</span><br><span class="line">    <span class="keyword">set_property</span>(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)</span><br><span class="line">    <span class="keyword">set_property</span>(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)</span><br><span class="line"><span class="keyword">endif</span>(CCACHE_FOUND)</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译生成动静态库的位置</span></span><br><span class="line"><span class="comment">##static library</span></span><br><span class="line"><span class="comment">#set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY $&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/lib/static/$&#123;CMAKE_BUILD_TYPE&#125;)</span></span><br><span class="line"><span class="comment">##shared library</span></span><br><span class="line"><span class="comment">#set(CMAKE_LIBRARY_OUTPUT_DIRECTORY $&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/lib/shared/$&#123;CMAKE_BUILD_TYPE&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行文件生成的位置</span></span><br><span class="line"><span class="comment">##exec</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/bin/<span class="variable">$&#123;CMAKE_BUILD_TYPE&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置工程名字</span></span><br><span class="line"><span class="keyword">set</span> (TARGET_NAME <span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span><span class="variable">$&#123;SUFFIX_STR&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加三方库</span></span><br><span class="line"><span class="comment">#注意:3rd-party的位置和形式</span></span><br><span class="line"><span class="comment">#<span class="doctag">TODO:</span>暂时不支持不同平台、debug/release的区分</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> (THIRD_PARTY_DIR <span class="string">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/3rd-party&quot;</span>)</span><br><span class="line"><span class="keyword">set</span> (THIRD_MODULES proj4)</span><br><span class="line"><span class="keyword">foreach</span> (mod <span class="variable">$&#123;THIRD_MODULES&#125;</span>)</span><br><span class="line">    <span class="keyword">include_directories</span> (<span class="variable">$&#123;THIRD_PARTY_DIR&#125;</span>/<span class="variable">$&#123;mod&#125;</span>/<span class="keyword">include</span>)</span><br><span class="line">    <span class="keyword">link_directories</span> (<span class="variable">$&#123;THIRD_PARTY_DIR&#125;</span>/<span class="variable">$&#123;mod&#125;</span>/lib)</span><br><span class="line"><span class="keyword">endforeach</span> ()</span><br><span class="line"></span><br><span class="line"><span class="comment">#包含库的位置影响#include&lt;path/*.h&gt;</span></span><br><span class="line"><span class="keyword">include_directories</span> (<span class="string">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/include&quot;</span></span><br><span class="line">                     <span class="string">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/source&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#源文件</span></span><br><span class="line"><span class="keyword">file</span> (GLOB_RECURSE SRC_FILES <span class="string">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/include/*.h&quot;</span></span><br><span class="line">                             <span class="string">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/source/*.cpp&quot;</span>)</span><br><span class="line"><span class="comment">#执行文件</span></span><br><span class="line"><span class="keyword">add_executable</span> (<span class="variable">$&#123;TARGET_NAME&#125;</span> <span class="variable">$&#123;SRC_FILES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#link libraries</span></span><br><span class="line"><span class="keyword">target_link_libraries</span> (<span class="variable">$&#123;TARGET_NAME&#125;</span> <span class="variable">$&#123;THIRD_MODULES&#125;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ul><li>三方库支持多平台或release/debug方法</li></ul></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXECUTE_PROCESS</span>( <span class="keyword">COMMAND</span> uname -m <span class="keyword">COMMAND</span> tr -d &#x27;\n&#x27; OUTPUT_VARIABLE ARCHITECTURE )</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$&#123;ARCHITECTURE&#125;</span> <span class="keyword">STREQUAL</span> <span class="string">&quot;aarch64&quot;</span>)</span><br><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;current env is aarch64&quot;</span>)</span><br><span class="line"><span class="comment">#...</span></span><br><span class="line"><span class="keyword">elseif</span>(<span class="variable">$&#123;ARCHITECTURE&#125;</span> <span class="keyword">STREQUAL</span> <span class="string">&quot;x86_64&quot;</span>)</span><br><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;current env is x84_64&quot;</span>)</span><br><span class="line"><span class="comment">#...</span></span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CMakeLists </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CheetSheet] Cheet Sheet</title>
      <link href="2021/03/15/cheet_sheet/"/>
      <url>2021/03/15/cheet_sheet/</url>
      
        <content type="html"><![CDATA[<p>📌 <strong>Web</strong></p><blockquote><p>free picture:</p><ul><li>[1] <a href="https://unsplash.com/">https://unsplash.com/</a></li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> CheetSheet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[HEXO] How to build your own blog with Hexo</title>
      <link href="2021/03/07/how_to_build_self_blogs/"/>
      <url>2021/03/07/how_to_build_self_blogs/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1>📝 <strong>前言</strong></h1><blockquote><p>前一段时间关注一个博主<code>老石谈芯</code>，虽然行业不同，但是感觉<code>老石谈芯</code>博主学习、工作的方式和方法很有意思。他在分享一本书<code>Show Your Work</code> 中一句话 <code>You don’t need to be an expert to share your work - beginners can easily help other beginners.</code> 说实话有点触动到我。之前在学习和工作中一直有这样的内心独白<code>自己不是一个大牛所以拿不出成形的东西进行分享那就算了吧</code>，这样想法本身其实就是有问题的，会不会存在一类人和我一样刚入门某个领域，看一些大牛的东西并不能完全理解。另一方面，如果对多人分享自己的知识，他们在学习过程中也会对你的知识提出自己的疑问，自己在理解这些疑问和其他人的思路的过程中也会开阔自己的思路。</p></blockquote><h1>💬 <strong>准备</strong></h1><blockquote><p>我的环境是<code>ubuntu</code>，<code>windows</code>环境请参考<a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E4%B8%8A%E4%BC%A0%E4%B9%8B%E5%89%8D">这里</a>。</p></blockquote><ul><li>node.js@v12.21.0</li><li>git@v2.25.1</li><li>hexo@v5.4.0</li></ul><h1>🎨 <strong>创建github博客</strong></h1><ul><li><p><strong>创建仓库</strong>：在<code>github</code>中新建一个名为<code>你的用户名.github.io</code>的仓库，下拉<code>你的用户名.github.io</code>的仓库</p></li><li><p><strong>初始化</strong>：<code>cd 你的用户名.github.io</code> 终端输入初始化 <code>hexo init</code></p></li><li><p><strong>配置</strong>：在<code>_config.yml</code>最后添加</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: git@github.com:你的用户名/你的用户名.github.io.git</span><br><span class="line">    branch: master #自己的分支</span><br></pre></td></tr></table></figure></li><li><p><strong>测试</strong>：终端输入<code>hexo g</code> 生成<code>hexo</code>博客,之后启动服务<code>hexo s</code>终端会出现<code>http://localhost:4000</code>，打开浏览器输入网址，简单的blog已经搭建好了。</p></li><li><p><strong>个性化1</strong>：<code>theme</code></p><ul><li><code>theme name</code>:我选用的theme是<a href="https://github.com/hxh2010/hexo-butterfly">butterfly</a></li><li>下拉代码到<code>blog</code>的<code>themes</code>中，修改<code>博客</code>的<code>_config.yml</code>如下：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure></li><li>测试：终端输入<code>hexo clean</code>清除原来的配置内容，<code>hexo g</code> 重新生成，<code>hexo s</code> 测试。如果有错误看一下是不是之前的终端下输入的<code>hexo s</code>是不是没有<code>ctrl + c</code>。</li><li>之后根据自己的实际需要设置自己的<code>url</code>和<code>context</code>等等…</li></ul></li><li><p><strong>个性化2</strong>：<code>Disqus评论</code></p><ul><li>注册<a href="https://disqus.com/">Disqus</a></li><li>配置Disqus：选择 <code>I want to install Disqus on my site</code>，根据自己的信息进行填写重要的是设置<code>configure</code>中的<code>Website Name</code>和<code>Website URL</code></li><li>配置主题中的<code>_config.yml</code>如下  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">disqus:</span><br><span class="line">    enable: true</span><br><span class="line">    shortname: your name #修改</span><br><span class="line">    count: true</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>个性化3</strong>：<code>emoji显示</code></p><ul><li>卸载<code>hexo-renderer-marked</code>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked -S</span><br></pre></td></tr></table></figure></li><li>安装<code>hexo-renderer-markdown-it</code>和<code>markdown-it-emoji</code>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it markdown-it-emoji -S</span><br></pre></td></tr></table></figure></li><li>修改博客<code>_config.yml</code>如下： <a href="https://blog.huqing.site/201901/55c8/">Ref</a>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">markdown:</span><br><span class="line">    render:</span><br><span class="line">        html: true</span><br><span class="line">        xhtmlOut: false</span><br><span class="line">        breaks: true</span><br><span class="line">        linkify: true</span><br><span class="line">        typographer: true</span><br><span class="line">        quotes: &#x27;“”‘’&#x27;</span><br><span class="line">    plugins:</span><br><span class="line">        - markdown-it-abbr</span><br><span class="line">        - markdown-it-footnote</span><br><span class="line">        - markdown-it-ins</span><br><span class="line">        - markdown-it-sub</span><br><span class="line">        - markdown-it-sup</span><br><span class="line">        - markdown-it-emoji</span><br><span class="line">    anchors:</span><br><span class="line">        level: 2</span><br><span class="line">        collisionSuffix: &#x27;v&#x27;</span><br><span class="line">        permalink: true</span><br><span class="line">        permalinkClass: header-anchor</span><br><span class="line">        permalinkSymbol: &#x27;&#x27;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>个性化…</strong></p></li><li><p><strong>部署GitHub</strong></p><ul><li>安装插件<code>npm install hexo-deployer-git --save</code></li><li>终端输入<code>hexo d</code>进行发布</li></ul></li></ul><h1>🔧 <strong>常见命令</strong></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot;                  #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot;             #新建页面</span><br><span class="line">hexo generate   or hexo g            #生成静态页面至public目录</span><br><span class="line">hexo server     or hexo s            #预览</span><br><span class="line">hexo deploy     or hexo d            #部署到GitHub</span><br><span class="line">hexo help                            #帮助</span><br><span class="line">hexo version                         #查看Hexo的版本</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[随笔] Why i start blogging</title>
      <link href="2021/03/07/why_start_blogging/"/>
      <url>2021/03/07/why_start_blogging/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1>📚<strong>为什么我要在网上写博客</strong></h1><blockquote><p>🎉 <strong>背景及原因</strong></p><ul><li>我本身出于的行业是一个不断要学习的行业，行业的技术更新很快，需要不断的学习。我相信现在的各行各业的技术人员都要学习新的技术和技能丰富自己。我有自己的<code>note-book</code>记录一些知识点但是很少进行在线的分享。前一段时间关注一个博主<code>老石谈芯</code>，虽然行业不同，但是感觉<code>老石谈芯</code>博主学习、工作的方式和方法很有意思。他在分享一本书<code>Show Your Work</code> 中一句话 <code>You don’t need to be an expert to share your work - beginners can easily help other beginners.</code> 说实话有点触动到我。之前在学习和工作中一直有这样的内心独白<code>自己不是一个大牛所以拿不出成形的东西进行分享那就算了吧</code>，这样想法本身其实就是有问题的，会不会存在一类人和我一样刚入门某个领域，看一些大牛的东西并不能完全理解。</li><li>其次，我是从自我提升的角度出发，因为自己都在<code>关着门闷头学习</code>其实这个并不太好，最怕的是自己理解的方向是错误的，同时没有人对你进行指正。这样很难得到大幅度的提升。如果对多人分享自己的知识，他们在学习过程中也会对你的知识提出自己的疑问，自己在理解这些疑问和其他人的思路的过程中也会开阔自己的思路。</li><li>此外，我想要调整个人两个不太好的习惯：<code>眼高手低</code>，我想借着<code>blog</code>的同时训练自己的代码能力。只有多练、多写以及多总结才能写出高水平的代码；<code>见异思迁</code>，我总是不能专注做一件事情，总是喜欢<code>联想</code>,比如干着一件事总是想着另一件事情也可以做做，然后再回来做之前的事情多半是事倍功半，这其中还包含另外一个缺点事情的优先级不能安排好。</li><li>还有一点，作为技术人员文档的水平也决定这个人的技术高度，当然智力超出常人的存在。我遇到的大牛一般文档超级棒，而且一般都是英文文档，看人家写的文档和代码真的是赏心悦目。</li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
